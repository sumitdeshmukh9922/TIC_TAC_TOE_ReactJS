{"version":3,"sources":["logo.svg","components/icon.js","App.js","reportWebVitals.js","index.js"],"names":["Icon","name","className","itemArray","Array","fill","App","useState","isCross","setIsCross","winMessage","setWinMessage","changeItem","itemNumber","toast","type","Container","position","Row","Col","md","map","item","index","Card","color","onClick","CardBody","Button","block","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85f96170.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\r\nimport {FaTimes, FaPen, FaRegCircle} from \"react-icons/fa\"\r\n\r\nconst Icon = ({name}) => {\r\n   switch (name) {\r\n       case 'circle':\r\n           return <FaRegCircle className=\"icons\" />\r\n       case 'cross':\r\n           return <FaTimes className=\"icons\" />\r\n       default:\r\n           return <FaPen className=\"icons\" />   \r\n           \r\n   }\r\n}\r\n\r\nexport default Icon;","import React, {useState} from \"react\";\nimport logo from './logo.svg';\nimport Icon from \"./components/icon\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {Card, CardBody, Container, Button, Col, Row} from \"reactstrap\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nconst itemArray = new Array(9).fill(\"empty\")\n\nconst App = () => {\n\n  const [isCross, setIsCross] = useState(false)\n  const [winMessage, setWinMessage] = useState(\"\")\n\n  const reloadGame = () => {\n    setIsCross(false)\n    setWinMessage(\"\")\n    itemArray.fill(\"empty\", 0, 9)\n  }\n\n  const checkIsWinner = () => {\n    if(\n      itemArray[0] === itemArray[1] &&\n      itemArray[0] === itemArray[2] &&\n      itemArray[0] !== \"empty\"\n    ){\n      setWinMessage(`${itemArray[0]} Won..!!`)\n    } else if (\n      itemArray[3] === itemArray[4] &&\n      itemArray[4] === itemArray[5] &&\n      itemArray[3] !== \"empty\"\n    ) {\n      setWinMessage(`${itemArray[3]} Won..!!`)\n    } else if (\n      itemArray[6] === itemArray[7] &&\n      itemArray[7] === itemArray[8] &&\n      itemArray[6] !== \"empty\"\n    ) {\n      setWinMessage(`${itemArray[6]} Won..!!`)\n    }else if (\n      itemArray[0] === itemArray[3] &&\n      itemArray[3] === itemArray[6] &&\n      itemArray[0] !== \"empty\"\n    ) {\n      setWinMessage(`${itemArray[0]} Won..!!`)\n    }else if (\n      itemArray[1] === itemArray[4] &&\n      itemArray[4] === itemArray[7] &&\n      itemArray[1] !== \"empty\"\n    ) {\n      setWinMessage(`${itemArray[1]} Won..!!`)\n    }else if (\n      itemArray[2] === itemArray[5] &&\n      itemArray[5] === itemArray[8] &&\n      itemArray[2] !== \"empty\"\n    ) {\n      setWinMessage(`${itemArray[2]} Won..!!`)\n    }else if (\n      itemArray[0] === itemArray[4] &&\n      itemArray[4] === itemArray[8] &&\n      itemArray[0] !== \"empty\"\n    ) {\n      setWinMessage(`${itemArray[0]} Won..!!`)\n    }else if (\n      itemArray[2] === itemArray[4] &&\n      itemArray[4] === itemArray[6] &&\n      itemArray[2] !== \"empty\"\n    ) {\n      setWinMessage(`${itemArray[2]} Won..!!`)\n    }\n    \n  }\n\n  const changeItem = itemNumber => {\n    if (winMessage) {\n      return toast(winMessage, {type: \"success\"})\n    }\n\n    if (itemArray[itemNumber] === \"empty\") {\n      itemArray[itemNumber] = isCross ? \"cross\" : \"circle\"\n      setIsCross(!isCross) \n    } else {\n      return toast(\"Already Filled\", {type: \"error\"})\n    }\n\n    checkIsWinner();\n\n  }\n\n  return (\n    <Container className=\"p-5\">\n      <ToastContainer position=\"bottom-center\" />\n      <Row>\n        <Col md={6} className=\"offset-md-3\">\n          {winMessage ? (\n            <div className=\"mb-2 mt-2\">\n              <h1 className=\"text-success text-uppercase text-center\">\n                {winMessage}\n              </h1>\n            </div>\n          ) : (\n            <h1 className=\"text-center text-warning\">\n              {isCross ? \"Cross\" : \"Circle\" } Turns\n            </h1>\n          )}\n          <div className=\"grid\">\n            {itemArray.map((item, index) => (\n              <Card color=\"warning\" onClick={ () => changeItem(index) }>\n                <CardBody  className=\"box\">\n                  <Icon name={item} />\n                </CardBody>\n              </Card>\n            ) )}\n            <div className=\"mb-2 mt-2\">\n              <h1 className=\"text-success text-uppercase text-center\">\n                <Button color=\"success\" block onClick={reloadGame}>\n                  Reload Game\n                </Button>\n              </h1>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}